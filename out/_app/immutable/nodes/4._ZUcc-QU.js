import{a as P,t as H}from"../chunks/9FMlr9EW.js";import{p as M,j as f,s as c,f as V,t as W,a as $,l as o,k as s,c as m,r as _,y as E}from"../chunks/Dv6h_wod.js";import{d as q,b as O}from"../chunks/DBnRoAt3.js";import{s as j}from"../chunks/Ber1wtzw.js";import{s as J}from"../chunks/PwPRnE0L.js";import{b as K,a as z}from"../chunks/BLwI1Dal.js";import{p as d}from"../chunks/Dt7jNuNY.js";import{b as G}from"../chunks/rRuQkeJf.js";import{o as Q}from"../chunks/CO77eEDg.js";import{a as y,K as X}from"../chunks/9tLHfo5w.js";import{a as Y}from"../chunks/BFa6LZKI.js";import{U as Z}from"../chunks/C_a7cqMs.js";class tt{async backup(t){const a=this.encodeDataToBackup(t);this.downloadAsFile(a)}downloadAsFile(t){const a=`${new Date().valueOf()}.timely-backup`;Z.downloadAsFile(t,a)}encodeDataToBackup(t){return btoa(JSON.stringify(t))}decodeFromBase64(t){const a=atob(t);return console.debug(a),JSON.parse(a)}}function at(l,t,a){t.downloadAsFile(o(a))}async function et(l,t,a){var i;const r=(i=o(t))==null?void 0:i.item(0);r&&s(a,d(await r.text()))}async function ot(l,t,a,r){s(t,!0);try{if(!a)return;await a.backup(r)}finally{s(t,!1)}}async function rt(l,t,a,r,i){s(t,!0);try{if(!a)return;const b=await a.getData();if(!b)throw Error("Invalid data to restore");s(r,d(i.encodeDataToBackup(b)))}finally{s(t,!1)}}var st=H('<h2>Backup</h2> <section><article><textarea name="backup-text" class="svelte-1iwmjr1"></textarea> <button>Local Backup</button> <button>Cloud Backup</button></article></section> <h2>Restore</h2> <section><article><div style="display: flex; gap: 1rem; align-items: center; margin-bottom: 1rem;"><input name="restore-file" type="file" accept=".timely-backup"> or <button style="flex-shrink: 0;">Read From Cloud</button></div> <textarea name="restore-text" class="svelte-1iwmjr1"></textarea> <button>Restore</button></article></section>',1);function kt(l,t){M(t,!0),Q(async()=>{});let a=d(y.getAppData()),r=d(Y.build(y.settings.cloudSyncHost,y.settings.cloudSyncUserId,X)),i=f(!1),b=E(()=>r&&!o(i)),h=f(!1),L=E(()=>r&&!o(h));const p=new tt;let v=f(d(p.encodeDataToBackup(a))),D=f(void 0),n=f(void 0),k;async function N(){try{if(!o(n))throw Error("No data to restore, select a file first");const e=p.decodeFromBase64(o(n));if(!e)throw Error("Invalid data to restore");await y.restoreAppData(e),s(n,void 0),k&&(k.value=""),s(v,d(p.encodeDataToBackup(e))),alert("Restored successfully!")}catch(e){alert(e)}}var F=st(),g=c(V(F),2),S=m(g),B=m(S);O(B);var A=c(B,2);A.__click=[at,p,v];var x=c(A,2);x.__click=[ot,i,r,a],_(S),_(g);var C=c(g,4),I=m(C),w=m(I),u=m(w);u.__change=[et,D,n],J(u,"flex-shrink","1"),J(u,"margin-bottom","0"),G(u,e=>k=e,()=>k);var R=c(u,2);R.__click=[rt,h,r,n,p],_(w);var T=c(w,2);O(T);var U=c(T,2);U.__click=N,_(I),_(C),W(()=>{x.disabled=!o(b),j(x,"aria-busy",o(i)),R.disabled=!o(L),j(R,"aria-busy",o(h))}),K(B,()=>o(v),e=>s(v,e)),z(u,()=>o(D),e=>s(D,e)),K(T,()=>o(n),e=>s(n,e)),P(l,F),$()}q(["click","change"]);export{kt as component};
