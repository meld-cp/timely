import{a as H,t as V}from"../chunks/CYLZ2iXy.js";import{p as W,j as m,s as l,f as $,t as q,a as z,l as r,k as i,c as b,r as _,y as I}from"../chunks/DADXHUXo.js";import{d as G,b as E}from"../chunks/F2U1FVqC.js";import{a as C,K as M,s as J}from"../chunks/Pm2PPD19.js";import{s as O}from"../chunks/PwPRnE0L.js";import{b as K,a as Q}from"../chunks/BLPrS0lv.js";import{p}from"../chunks/Ie9j5a_F.js";import{b as X}from"../chunks/48vPxV_Q.js";import{a as Y}from"../chunks/D_OZV7kT.js";import{U as Z}from"../chunks/C_a7cqMs.js";class tt{async backup(t){const e=this.encode(t);this.downloadAsFile(e)}downloadAsFile(t){const e=`${new Date().valueOf()}.timely-backup`;Z.downloadAsFile(t,e)}encode(t){return JSON.stringify(t,null,2)}decodeFromJson(t){return JSON.parse(t)}}function et(c,t,e){t.downloadAsFile(r(e))}async function at(c,t,e){var a;const s=(a=r(t))==null?void 0:a.item(0);s&&i(e,p(await s.text()))}async function ot(c,t,e,s){i(t,!0);try{if(!e)return;const a=await e.getData();if(a){if(a.modified==s.modified){alert("Cloud data is same as app data, skipping backup");return}if(a.modified>s.modified){alert("Cloud data is newer than app data, skipping backup");return}}await e.backup(s)}finally{i(t,!1)}}async function rt(c,t,e,s,a){i(t,!0);try{if(!e)return;const d=await e.getData();if(!d)throw Error("Invalid data to restore");i(s,p(a.encode(d)))}finally{i(t,!1)}}var st=V('<h2>Backup</h2> <section><article><textarea name="backup-text" class="svelte-1iwmjr1"></textarea> <button>Local Backup</button> <button>Cloud Backup</button></article></section> <h2>Restore</h2> <section><article><div style="display: flex; gap: 1rem; align-items: center; margin-bottom: 1rem;"><input name="restore-file" type="file" accept=".timely-backup"> or <button style="flex-shrink: 0;">Read From Cloud</button></div> <textarea name="restore-text" class="svelte-1iwmjr1"></textarea> <button>Restore</button></article></section>',1);function _t(c,t){W(t,!0);let e=p(C.getAppData());const s=C.settingsController.read();let a=p(Y.build(s.cloudSyncHost,s.cloudSyncUserId,M)),d=m(!1),L=I(()=>a&&!r(d)),y=m(!1),N=I(()=>a&&!r(y));const f=new tt;let v=m(p(f.encode(e))),h=m(void 0),n=m(void 0),k;async function U(){try{if(!r(n))throw Error("No data to restore, select a file first");const o=f.decodeFromJson(r(n));if(!o)throw Error("Invalid data to restore");await C.restoreAppData(o),i(n,void 0),k&&(k.value=""),i(v,p(f.encode(o))),alert("Restored successfully!")}catch(o){alert(o)}}var A=st(),g=l($(A),2),B=b(g),w=b(B);E(w);var S=l(w,2);S.__click=[et,f,v];var x=l(S,2);x.__click=[ot,d,a,e],_(B),_(g);var T=l(g,4),j=b(T),D=b(j),u=b(D);u.__change=[at,h,n],O(u,"flex-shrink","1"),O(u,"margin-bottom","0"),X(u,o=>k=o,()=>k);var R=l(u,2);R.__click=[rt,y,a,n,f],_(D);var F=l(D,2);E(F);var P=l(F,2);P.__click=U,_(j),_(T),q(()=>{x.disabled=!r(L),J(x,"aria-busy",r(d)),R.disabled=!r(N),J(R,"aria-busy",r(y))}),K(w,()=>r(v),o=>i(v,o)),Q(u,()=>r(h),o=>i(h,o)),K(F,()=>r(n),o=>i(n,o)),H(c,A),z()}G(["click","change"]);export{_t as component};
