var f=Object.defineProperty;var S=(o,t,s)=>t in o?f(o,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[t]=s;var c=(o,t,s)=>S(o,typeof t!="symbol"?t+"":t,s);class T{constructor(t,s,e){this.remote=t,this.userId=s,this.appId=e}buildItemUrl(t,s){return new URL(`${this.remote}/${this.userId}/${this.appId}/${t}/${s}`)}buildListUrl(t){return new URL(`${this.remote}/${this.userId}/${this.appId}/${t}/`)}async getItemList(t){const s=this.buildListUrl(t);return await(await fetch(s)).json()}async getItem(t,s){const e=this.buildItemUrl(t,s);return await(await fetch(e)).text()}async setItem(t,s,e){const r=this.buildItemUrl(t,s);await fetch(r,{method:"POST",body:e})}async delItem(t,s){const e=this.buildItemUrl(t,s);await fetch(e,{method:"DELETE"})}}const l="default",E="dataTimestamp",h="ids",n=class n{constructor(t,s,e){this.host=t,this.userId=s,this.appId=e}static build(t,s,e){return t!=null&&(t.startsWith("https://")||t.startsWith("http://"))&&s!=null&&s.length>0&&e!=null&&e.length>0?new n(t,s,e):null}async backup(t){const s=new T(this.host,this.userId,this.appId);await s.setItem(n.BUCKET_ID_META,E,JSON.stringify(t.modified)),await s.setItem(n.BUCKET_ID_SETTINGS,l,JSON.stringify(t.settings));const e=t.tasks.map(i=>i.id);await s.setItem(n.BUCKET_ID_TASKS,h,JSON.stringify(e));for(const i of t.tasks)await s.setItem(n.BUCKET_ID_TASKS,i.id,JSON.stringify(i));const r=t.invoices.map(i=>i.id);await s.setItem(n.BUCKET_ID_INVOICES,h,JSON.stringify(r));for(const i of t.invoices)await s.setItem(n.BUCKET_ID_INVOICES,i.id,JSON.stringify(i))}async getStoredValueOrDefault(t,s,e,r){try{const i=await t.getItem(s,e);if(i==null)return r;const I=JSON.parse(i);return I??r}catch{return r}}async getStoredValueOrThrow(t,s,e){try{const r=await t.getItem(s,e),i=JSON.parse(r);if(i==null)throw new Error(`Object is undefined after parsing and casting. JSON: ${r}`);return i}catch(r){throw new Error(`Unable to get stored value for key ${e} in bucket ${s}. ${r}`)}}async getData(){const t=new T(this.host,this.userId,this.appId),s=await this.getStoredValueOrDefault(t,n.BUCKET_ID_META,E,0);let e=await this.getStoredValueOrThrow(t,n.BUCKET_ID_SETTINGS,l);const r=await this.getStoredValueOrDefault(t,n.BUCKET_ID_TASKS,h,[]),i=[];for await(const d of r)try{const a=await this.getStoredValueOrThrow(t,n.BUCKET_ID_TASKS,d);i.push(a)}catch(a){console.error(a)}const I=await this.getStoredValueOrDefault(t,n.BUCKET_ID_INVOICES,h,[]),u=[];for await(const d of I)try{const a=await this.getStoredValueOrThrow(t,n.BUCKET_ID_INVOICES,d);u.push(a)}catch(a){console.error(a)}return{modified:s,settings:e,tasks:i,invoices:u}}};c(n,"BUCKET_ID_META","meta"),c(n,"BUCKET_ID_SETTINGS","settings"),c(n,"BUCKET_ID_TASKS","tasks"),c(n,"BUCKET_ID_INVOICES","invoices");let w=n;export{T as K,w as a};
